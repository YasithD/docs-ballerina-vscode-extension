[{"kind":2,"language":"ballerina","value":"import ballerina/io;","outputs":[],"executionSummary":{"timing":{"startTime":1685964614041,"endTime":1685964614184},"executionOrder":1,"success":true},"metadata":{}},{"kind":2,"language":"ballerina","value":"type Person record {\n    string id;\n    string firstName;\n    string lastName;\n    int age;\n    string country;\n};\n\ntype Course record {\n    string id;\n    string name;\n    int credits;\n};\n\ntype Student record {\n    string id;\n    string fullName;\n    string age;\n    record {\n        string title;\n        int credits;\n    }[] courses;\n    int totalCredits;\n    string visaType;\n};\n","outputs":[],"executionSummary":{"timing":{"startTime":1685964614185,"endTime":1685964614250},"executionOrder":2,"success":true},"metadata":{}},{"kind":2,"language":"ballerina","value":"const D_TIER_4_VISA = \"D tier-4\";","outputs":[],"executionSummary":{"timing":{"startTime":1685964614250,"endTime":1685964614294},"executionOrder":3,"success":true},"metadata":{}},{"kind":2,"language":"ballerina","value":"public function totalCredits(int total, record {string id; string name; int credits;} course) returns int {\n    return total + (course.id.startsWith(\"CS\") ? course.credits : 0);\n}","outputs":[],"executionSummary":{"timing":{"startTime":1685964614295,"endTime":1685964614355},"executionOrder":4,"success":true},"metadata":{}},{"kind":2,"language":"ballerina","value":"function transform(Person person, Course[] courses) returns Student => let var isForeign = person.country != \"LK\" in {\n        id: person.id + (isForeign ? \"F\" : \"\"),\n        age: person.age.toString(),\n        fullName: person.firstName + \" \" + person.lastName,\n        courses: from var coursesItem in courses\n            where coursesItem.id.startsWith(\"CS\")\n            select {\n                title: coursesItem.id + \" - \" + coursesItem.name,\n                credits: coursesItem.credits\n            },\n        visaType: isForeign ? D_TIER_4_VISA : \"n/a\",\n        totalCredits: courses.reduce(totalCredits, 0)\n    };","outputs":[],"executionSummary":{"timing":{"startTime":1685964614355,"endTime":1685964614428},"executionOrder":5,"success":true},"metadata":{}},{"kind":2,"language":"ballerina","value":"    Person person = {\n        id: \"1001\",\n        firstName: \"Vinnie\",\n        lastName: \"Hickman\",\n        age: 15,\n        country: \"UK\"\n    };\n\n    Course[] courses = [\n            {\n                id: \"CS6002\",\n                name: \"Computation Structures\",\n                credits: 4\n            },\n            {\n                id: \"CS6003\",\n                name: \"Circuits and Electronics\",\n                credits: 3\n            }\n        ];\n\n    Student student = transform(person, courses);\n    io:println(student);","outputs":[[{"mime":"text/plain","value":"{\"id\":\"1001F\",\"fullName\":\"Vinnie Hickman\",\"age\":\"15\",\"courses\":[{\"title\":\"CS6002 - Computation Structures\",\"credits\":4},{\"title\":\"CS6003 - Circuits and Electronics\",\"credits\":3}],\"totalCredits\":7,\"visaType\":\"D tier-4\"}"}]],"executionSummary":{"timing":{"startTime":1685964614428,"endTime":1685964615299},"executionOrder":6,"success":true},"metadata":{}}]